/* eslint-disable comma-spacing */
import { test, expect } from '@jest/globals'
import isValidSudoku from './solution.js'

test('isValidSudoku should handle "valid" boards', () => {
  const valid = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(valid)).toBe(true)

  const completed = [
    ['5','3','4','6','7','8','9','1','2']
  , ['6','7','2','1','9','5','3','4','8']
  , ['1','9','8','3','4','2','5','6','7']
  , ['8','5','9','7','6','1','4','2','3']
  , ['4','2','6','8','5','3','7','9','1']
  , ['7','1','3','9','2','4','8','5','6']
  , ['9','6','1','5','3','7','2','8','4']
  , ['2','8','7','4','1','9','6','3','5']
  , ['3','4','5','2','8','6','1','7','9']
  ]
  expect(isValidSudoku(completed)).toBe(true)

  const empty = Array(9).fill().map(() => Array(9).fill('.'))
  expect(isValidSudoku(empty)).toBe(true)
})

test('isValidSudoku should handle [row/col/box] violations', () => {
  const invalid = [
    ['8','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(invalid)).toBe(false)

  const row_viol = [
    ['5','3','5','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(row_viol)).toBe(false)

  const midrow_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','4','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(midrow_viol)).toBe(false)

  const lastrow_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','8','7','9']
  ]
  expect(isValidSudoku(lastrow_viol)).toBe(false)

  const col_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['8','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(col_viol)).toBe(false)

  const midcol_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','7','8','.','3','.','.','1']
  , ['7','.','7','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(midcol_viol)).toBe(false)

  const lastcol_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','3']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(lastcol_viol)).toBe(false)

  const box_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','3','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(box_viol)).toBe(false)

  const midbox_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','1','.','.','3']
  , ['4','.','.','8','1','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','.','5']
  , ['.','.','.','.','8','.','.','7','9']
  ]
  expect(isValidSudoku(midbox_viol)).toBe(false)

  const lastbox_viol = [
    ['5','3','.','.','7','.','.','.','.']
  , ['6','.','.','1','9','5','.','.','.']
  , ['.','9','8','.','.','.','.','6','.']
  , ['8','.','.','.','6','.','.','.','3']
  , ['4','.','.','8','.','3','.','.','1']
  , ['7','.','.','.','2','.','.','.','6']
  , ['.','6','.','.','.','.','2','8','.']
  , ['.','.','.','4','1','9','.','7','5']
  , ['.','.','.','.','8','.','7','7','9']
  ]
  expect(isValidSudoku(lastbox_viol)).toBe(false)

  const multiple = [
    ['1','1','1','4','5','6','7','8','9']
  , ['1','2','3','4','5','6','7','8','9']
  , ['1','2','3','4','5','6','7','8','9']
  , ['4','5','6','4','5','6','7','8','9']
  , ['4','5','6','4','5','6','7','8','9']
  , ['4','5','6','4','5','6','7','8','9']
  , ['7','8','9','7','8','9','7','8','9']
  , ['7','8','9','7','8','9','7','8','9']
  , ['7','8','9','7','8','9','7','8','9']
  ]
  expect(isValidSudoku(multiple)).toBe(false)
})
